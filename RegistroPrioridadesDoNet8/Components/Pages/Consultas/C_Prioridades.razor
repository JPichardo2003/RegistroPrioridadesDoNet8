@page "/ConsultaPrioridades"
@rendermode InteractiveServer
@inject PrioridadesBLL prioridadesBLL;
<RadzenNotification/>
<div class="card-header row">
    <h1>Consulta Prioridades</h1>
    <label>Filtrar Por:</label>
    <div class="col-md-6 input-group filter-input">
        <InputSelect @bind-Value="Filtro" class="form-select">
            <option value="1">Prioridad Id</option>
            <option value="2">Descripci&oacute;n</option>
        </InputSelect>
        <div class="input-group-append">
            <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
        </div>
    </div>
    <div class="col-md-6">
        @switch (Filtro)
        {
            case 1:
                <InputNumber @bind-Value="prioridades.PrioridadId" class="form-control"></InputNumber>
                break;
            case 2:
                <InputText @bind-Value="prioridades.Descripción" class="form-control"></InputText>
            break;
        }
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Prioridad ID</th>
                <th>Descripci&oacute;n</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ListaPrioridades)
            {
                <tr>
                    <td>@item.PrioridadId</td>
                    <td>@item.Descripción</td>
                    <td><a href="RegistroPrioridades/@item.PrioridadId"><i class="bi bi-eye-fill" /></a></td>
                </tr>
            }
            <tr>
                <td>Conteo: @Conteo</td>
            </tr>
        </tbody>
    </table>
</div>


@code 
{
    public int Filtro { get; set; }
    public Prioridades prioridades { get; set; } = new Prioridades();
    public List<Prioridades> ListaPrioridades { get; set; } = new List<Prioridades>();
    public int Conteo { get; set; }

    protected override void OnInitialized()
    {
        ListaPrioridades = prioridadesBLL.Listar(a => true);
        Conteo = ListaPrioridades.Count;
    }

    public void Buscar()
    {
        if (Filtro == 1 && prioridades.PrioridadId > 0)
            ListaPrioridades = prioridadesBLL.Listar(p => p.PrioridadId == prioridades.PrioridadId);
        else
        if (Filtro == 2 && !string.IsNullOrEmpty(prioridades.Descripción))
            ListaPrioridades = prioridadesBLL.Listar(p => p.Descripción!.ToLower().Contains(prioridades.Descripción.ToLower()));
        else
            ListaPrioridades = prioridadesBLL.Listar(p => true);
        Conteo = ListaPrioridades.Count;
    }
}